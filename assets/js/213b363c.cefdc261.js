"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[302],{1310:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var s=t(4848),r=t(8453);const o={title:"Recipes"},i="Recipes",a={id:"recipes",title:"Recipes",description:"Basic",source:"@site/docs/recipes.mdx",sourceDirName:".",slug:"/recipes",permalink:"/promptdx/docs/recipes",draft:!1,unlisted:!1,editUrl:"https://github.com/puzzlet-ai/promptdx-docs/edit/main/docs/recipes.mdx",tags:[],version:"current",frontMatter:{title:"Recipes"},sidebar:"docs",previous:{title:"API",permalink:"/promptdx/docs/api"}},c={},p=[{value:"Basic",id:"basic",level:2},{value:"Chatbot",id:"chatbot",level:2},{value:"Function Calling",id:"function-calling",level:2},{value:"Direct Provider Call",id:"direct-provider-call",level:2},{value:"Custom Model",id:"custom-model",level:2},{value:"Chaining",id:"chaining",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"recipes",children:"Recipes"})}),"\n",(0,s.jsx)(n.h2,{id:"basic",children:"Basic"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"index.prompt.mdx"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"---\nname: basic-prompt\nmetadata:\n  model:\n    name: gpt-4o-mini\n    settings:\n      top_p: 1\n      temperature: 0.7\n---\n\n<System>You are an expert math tutor</System>\n<User>What's 2 + 2?</User>\n"})}),"\n",(0,s.jsx)(n.p,{children:"Running via SDK:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import Prompt from './index.prompt.mdx';\nimport { runInference } from '@puzzlet/promptdx';\n\nconst props = {};\nconst result = await runInference(Prompt, props);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"chatbot",children:"Chatbot"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"index.prompt.mdx"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"---\nname: chat\nmetadata:\n  model:\n    name: gpt-4o-mini\n    settings:\n      top_p: 1\n      temperature: 0.7\ntest_settings:\n  props:\n    messageHistory:\n      - role: user\n        message: What's 2 + 2?\n      - role: assistant\n        message: 5\n---\n\nimport ChatHistory from './chat-history.mdx';\n\n<System>You are an expert math tutor</System>\n<ChatHistory history={props.history}>\n<User>That's wrong. What's 2 + 2?</User>\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"chat-history.mdx"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"<ForEach arr={props.history}>\n  {(item) => (\n    <>\n      <If condition={item.role == 'user'}>\n        <User>{item.message}</User>\n      </If>\n      <ElseIf condition={item.role == 'assistant'}>\n        <Assistant>{item.message}</Assistant>\n      </ElseIf>\n    </>\n  )}\n</ForEach>\n"})}),"\n",(0,s.jsx)(n.p,{children:"Running via SDK:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import Prompt from \'./index.prompt.mdx\';\nimport { runInference } from \'@puzzlet/promptdx\';\n\nconst props = {\n  history: [\n    {\n      role: "user",\n      message: "What\'s 2 + 2?"\n    },\n    {\n      role: "assistant",\n      message: "5"\n    },\n  ]\n};\nconst result = await runInference(Prompt, props);\n'})}),"\n",(0,s.jsx)(n.h2,{id:"function-calling",children:"Function Calling"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"index.prompt.mdx"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"---\nname: calculate\nmetadata:\n  model:\n    name: gpt-4o-mini\n    settings:\n      tools:\n      -\n          type: function\n          function:\n            name: calculate\n            description: Performs basic math calculations.\n            parameters:\n              type: object\n              properties:\n                expression:\n                  type: string\n                  description: A mathematical expression to calculate.\n              required:\n              - expression\n              additionalProperties: false\n      temperature: 0.7\n      top_p: 1\n---\n\n<System>You are a helpful assistant capable of solving basic math problems and using tools as needed.</System>\n<User>What is 7 + 5?</User>\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import Prompt from './index.prompt.mdx';\nimport { runInference } from '@puzzlet/promptdx';\n\nconst props = {};\nconst result = await runInference(Prompt, props);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"direct-provider-call",children:"Direct Provider Call"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"index.prompt.mdx"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"---\nname: direct-call\nmetadata:\n  model:\n    name: gpt-4o-mini\n    settings:\n      top_p: 1\n      temperature: 0.7\n---\n\n<System>You are an expert math tutor</System>\n<User>What's 2 + 2?</User>\n"})}),"\n",(0,s.jsx)(n.p,{children:"Running via SDK:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import Prompt from './index.prompt.mdx';\nimport { deserialize } from '@puzzlet/promptdx';\nimport { OpenAI } from 'openai';\n\nconst client = new OpenAI();\n\nconst props = {};\nconst openAIConfig = await deserialize(Prompt, props);\nconst result = await client.chat.completions.create(openAIConfig);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"custom-model",children:"Custom Model"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:'Register your model provider parser w/ "my-custom-model", by following steps outlined in "Supported Provders".'}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Invoke config\n",(0,s.jsx)(n.code,{children:"index.prompt.mdx"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"---\nname: custom\nmetadata:\n  model:\n    name: my-custom-model\n    settings:\n      top_p: 1\n      temperature: 0.7\n      custom_settings: 1\n---\n\n<System>You are an expert math tutor</System>\n<User>What's 2 + 2?</User>\n"})}),"\n",(0,s.jsx)(n.p,{children:"Running via SDK:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import Prompt from './index.prompt.mdx';\nimport { runInference } from '@puzzlet/promptdx';\n\nconst props = {};\nconst result = await runInference(Prompt, props);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"chaining",children:"Chaining"}),"\n",(0,s.jsx)(n.p,{children:"Docs Coming soon."})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(6540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);