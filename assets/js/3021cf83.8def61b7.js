"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[857],{5251:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(4848),o=n(8453);const s={title:"Getting Started"},d="Getting Started",i={id:"getting-started",title:"Getting Started",description:"Follow the instructions below to install PromptDX in your app.",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/promptdx/docs/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/puzzlet-ai/promptdx-docs/edit/main/docs/getting-started.mdx",tags:[],version:"current",frontMatter:{title:"Getting Started"},sidebar:"docs",next:{title:"Overview",permalink:"/promptdx/docs/overview"}},a={},l=[{value:"Install PromptDX",id:"install-promptdx",level:2},{value:"Use PromptDX",id:"use-promptdx",level:2},{value:"VSCode",id:"vscode",level:3},{value:"SDK - Loader (Recommended):",id:"sdk---loader-recommended",level:3},{value:"SDK - Node",id:"sdk---node",level:3}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,r.jsx)(t.p,{children:"Follow the instructions below to install PromptDX in your app."}),"\n",(0,r.jsx)(t.h2,{id:"install-promptdx",children:"Install PromptDX"}),"\n",(0,r.jsx)(t.p,{children:"Install with npm:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",metastring:"npm",children:"npm install @puzzlet/promptdx\n"})}),"\n",(0,r.jsx)(t.p,{children:"or yarn:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",metastring:"npm",children:"yarn add @puzzlet/promptdx\n"})}),"\n",(0,r.jsx)(t.h2,{id:"use-promptdx",children:"Use PromptDX"}),"\n",(0,r.jsx)(t.h3,{id:"vscode",children:"VSCode"}),"\n",(0,r.jsx)(t.p,{children:"Install our VSCode extension to streamline your development process."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://marketplace.visualstudio.com/items?itemName=puzzlet.promptdx",children:"Download the VSCode Extension"})}),"\n",(0,r.jsx)(t.h3,{id:"sdk---loader-recommended",children:"SDK - Loader (Recommended):"}),"\n",(0,r.jsxs)(t.p,{children:["Use our ",(0,r.jsx)(t.a,{href:"https://github.com/puzzlet-ai/promptdx-loader",children:"webpack loader"}),". Then import your prompt directly."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"import { runInference } from '@puzzlet/promptdx';\nimport MyPrompt from './my-prompt.mdx';\n...\nconst props = { name: 'Jim' };\nconst result = await runInference(MyPrompt, props);\n"})}),"\n",(0,r.jsx)(t.h3,{id:"sdk---node",children:"SDK - Node"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"import { parse, transform, stringify } from '@puzzlet/promptdx';\nimport fs from 'fs';\n\n// Define how to load imports.\nconst getFile = (path: string) => {\n  const input = fs.readFileSync(path, 'utf-8');\n  return input;\n}\n\nconst run = async (path: string) => {\n  const mdx = await getFile(path);\n  const parsed = await parse(mdx, `${basePathToMdxFile}`, getFile);\n  const props = { name: 'Jim' };\n  const result = await runInference(parsed, props);\n}\n"})})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>i});var r=n(6540);const o={},s=r.createContext(o);function d(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);