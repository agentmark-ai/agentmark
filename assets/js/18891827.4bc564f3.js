"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[235],{4050:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(4848),i=n(8453);const a={title:"Overview"},r="What is PromptDX?",s={id:"overview",title:"Overview",description:"PromptDX is a declarative, extensible, and composable approach for developing LLM prompts using Markdown and JSX.",source:"@site/docs/overview.mdx",sourceDirName:".",slug:"/overview",permalink:"/promptdx/docs/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/puzzlet-ai/promptdx-docs/edit/main/docs/overview.mdx",tags:[],version:"current",frontMatter:{title:"Overview"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/promptdx/docs/getting-started"},next:{title:"Syntax",permalink:"/promptdx/docs/syntax"}},d={},c=[{value:"Motivation",id:"motivation",level:2},{value:"Why extend Markdown?",id:"why-extend-markdown",level:2}];function l(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"what-is-promptdx",children:"What is PromptDX?"})}),"\n",(0,o.jsx)(t.p,{children:"PromptDX is a declarative, extensible, and composable approach for developing LLM prompts using Markdown and JSX.\nWith PromptDX, you can easily open a file to see the exact input sent to the LLM."}),"\n",(0,o.jsxs)(t.p,{children:["PromptDX is built on top of our templating language ",(0,o.jsx)(t.a,{href:"https://github.com/puzzlet-ai/templatedx",children:"TemplateDX"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,o.jsx)(t.p,{children:"PromptDX provides users with a powerful way to communicate with LLM's, while reducing the\nabstractions as much as possible. A PromptDX file allows you to open it, and immediately understand what's being sent\nto the LLM API, in a simple, readable format."}),"\n",(0,o.jsx)(t.p,{children:"PromptDX runs locally, and leverages a plugin interface so you can extend it with your own custom models,\nfilter functions, tags, etc."}),"\n",(0,o.jsx)(t.h2,{id:"why-extend-markdown",children:"Why extend Markdown?"}),"\n",(0,o.jsx)(t.p,{children:"PromptDX is built on TemplateDX, which extends Markdown's familiar syntax to support complex, structured content needs.\nMarkdown works well for basic content but lacks the flexibility needed for templating, composable components,\nand organized content. TemplateDX introduces custom components and templating capabilities, enabling document composability,\nconditional rendering, and variable interpolation while maintaining Markdown\u2019s readability and simplicity.\nThis approach offers a powerful tool for creating dynamic, content-rich documents."})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var o=n(6540);const i={},a=o.createContext(i);function r(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);