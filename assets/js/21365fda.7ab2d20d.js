"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[823],{4810:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=n(4848),o=n(8453);const s={id:"syntax",title:"Syntax"},i="Syntax",a={id:"syntax",title:"Syntax",description:"A PromptDX file has two primary components to it.",source:"@site/docs/syntax.mdx",sourceDirName:".",slug:"/syntax",permalink:"/promptdx/docs/syntax",draft:!1,unlisted:!1,editUrl:"https://github.com/puzzlet-ai/promptdx-docs/edit/main/docs/syntax.mdx",tags:[],version:"current",frontMatter:{id:"syntax",title:"Syntax"},sidebar:"docs",previous:{title:"Overview",permalink:"/promptdx/docs/overview"},next:{title:"Type Safety",permalink:"/promptdx/docs/type-safety"}},d={},l=[{value:"Frontmatter",id:"frontmatter",level:2},{value:"Body",id:"body",level:2}];function c(t){const e={h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,o.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"syntax",children:"Syntax"})}),"\n",(0,r.jsx)(e.p,{children:"A PromptDX file has two primary components to it."}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"Frontmatter"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"Body"})}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{alt:"Syntax",src:n(7361).A+"",width:"970",height:"586"})}),"\n",(0,r.jsx)(e.h2,{id:"frontmatter",children:"Frontmatter"}),"\n",(0,r.jsx)(e.p,{children:"Frontmatter is defined in yaml, and its where your configuration and metadata about your prompts are stored.\nIn there, you will find:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Model Configuration"}),"\n",(0,r.jsx)(e.li,{children:"A required name for your prompt"}),"\n",(0,r.jsx)(e.li,{children:"Any test related data (i.e. test props, etc.)"}),"\n",(0,r.jsx)(e.li,{children:"Any other metadata you want to define like version, author, etc."}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"body",children:"Body"}),"\n",(0,r.jsx)(e.p,{children:"The body of your prompt corresponds to the messages being sent to the LLM."})]})}function p(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(c,{...t})}):c(t)}},7361:(t,e,n)=>{n.d(e,{A:()=>r});const r=n.p+"assets/images/example-labeled-28c32740b803debd641a516588b7af2a.png"},8453:(t,e,n)=>{n.d(e,{R:()=>i,x:()=>a});var r=n(6540);const o={},s=r.createContext(o);function i(t){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:i(t.components),r.createElement(s.Provider,{value:e},t.children)}}}]);