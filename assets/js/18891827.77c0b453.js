"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[235],{4050:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var o=n(4848),a=n(8453);const r={title:"Overview"},i="What is AgentMark?",s={id:"overview",title:"Overview",description:"AgentMark is a declarative, extensible, and composable approach for developing LLM agents or prompts using readable Markdown and JSX.",source:"@site/docs/overview.mdx",sourceDirName:".",slug:"/overview",permalink:"/agentmark/docs/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/puzzlet-ai/agentmark-docs/edit/main/docs/overview.mdx",tags:[],version:"current",frontMatter:{title:"Overview"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/agentmark/docs/getting-started"},next:{title:"Syntax",permalink:"/agentmark/docs/syntax"}},l={},d=[{value:"Motivation",id:"motivation",level:2},{value:"Why extend Markdown?",id:"why-extend-markdown",level:2},{value:"Will you support more than TypeScript?",id:"will-you-support-more-than-typescript",level:2}];function c(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"what-is-agentmark",children:"What is AgentMark?"})}),"\n",(0,o.jsx)(t.p,{children:"AgentMark is a declarative, extensible, and composable approach for developing LLM agents or prompts using readable Markdown and JSX.\nWith AgentMark, you can easily open a file to see the exact input sent to the LLM."}),"\n",(0,o.jsxs)(t.p,{children:["AgentMark is built on top of our templating language ",(0,o.jsx)(t.a,{href:"https://github.com/puzzlet-ai/templatedx",children:"TemplateDX"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,o.jsx)(t.p,{children:"The goal of AgentMark is to simplify the development of agents through readable and portable Markdown + JSX.\nAgentMark allows you to decouple your Prompts from code, and your model config providers through a unified interface."}),"\n",(0,o.jsx)(t.p,{children:"AgentMark also runs completely locally, and does not require a server."}),"\n",(0,o.jsx)(t.h2,{id:"why-extend-markdown",children:"Why extend Markdown?"}),"\n",(0,o.jsx)(t.p,{children:"AgentMark is built on TemplateDX, which extends Markdown's familiar syntax to support complex, structured content needs.\nMarkdown works well for basic content but lacks the flexibility needed for templating, composable components,\nand organized content. TemplateDX introduces custom components and templating capabilities, enabling document composability,\nconditional rendering, and variable interpolation while maintaining Markdown\u2019s readability and simplicity.\nThis approach offers a powerful tool for creating dynamic, content-rich documents."}),"\n",(0,o.jsx)(t.h2,{id:"will-you-support-more-than-typescript",children:"Will you support more than TypeScript?"}),"\n",(0,o.jsx)(t.p,{children:"Yes, the goal is to support a variety of languages!"})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var o=n(6540);const a={},r=o.createContext(a);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);